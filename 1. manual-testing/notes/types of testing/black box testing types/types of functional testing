
#### NOW LETS DRIVE DOWN DEEPER INTO TYPES OF FUNCTIONAL TESTING ####

There are total 16 types of functional testing 
Lets go through one by one 

1. Unit testing ::

Unit testing is the process of testing the smallest parts of your code, like it is a method in which we verify the code’s correctness by running one by one.
It’s a key part of software development that improves code quality by testing each unit in isolation.

You write unit tests for these code units and run them automatically every time you make changes. 
If a test fails, it helps you quickly find and fix the issue. Unit testing promotes modular code, ensures better test coverage, and saves time by allowing developers to focus more on coding than manual testing.

In these multiple tests are written for a single function to cover different possible scenarios and these are called test cases.
While it is ideal to cover all expected behaviors, it is not always necessary to test every scenario.

Unit tests should run one by one, it means that they do not depend on other system parts like databases or networks. 
Instead, data stubs can be used to simulate these dependencies. 
Writing unit tests is easiest for simple, self-contained code blocks.

#### UNIT TESTING STRATEGIES ####

**To create effective unit tests **

1. Logic checks: Verify if the system performs correct calculations and follows the expected path with valid inputs. Check all possible paths through the code are tested.
2. Boundary checks: Test how the system handles typical, edge case, and invalid inputs. For example, if an integer between 3 and 7 is expected, check how the system reacts to a 5 (normal), a 3 (edge case), and a 9 (invalid input).
3. Error handling: Check the system properly handles errors. Does it prompt for a new input, or does it crash when something goes wrong?
4. Object-oriented checks: If the code modifies objects, confirm that the object’s state is correctly updated after running the code.


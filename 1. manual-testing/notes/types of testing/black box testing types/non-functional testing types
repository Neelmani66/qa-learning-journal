## Here we will cover about all the techniques used in non-functional testing ##

........................................................................................................................................................................

-- Compatibility testing
Compatibility testing is software testing that comes under the non-functional testing category, and it is performed on an application to check its compatibility (running capability) on different platforms/environments. 
This testing is done only when the application becomes stable. 
This means simply this compatibility test aims to check the developed software application functionality on various software, hardware platforms, networks and browsers, etc.

This compatibility testing is very important in product production and implementation point of view as it is performed to avoid future issues regarding compatibility.

........................................................................................................................................................................

-- Conformance testing
Conformance Testing is a type of software testing that is performed to determine whether a software product or application meets with the specific and standard requirements. 
This type of testing is usually either logical testing or physical testing.
Conformance testing procedures also involve other criteria from mathematical testing or chemical testing. 
Many requirements for efficiency, interoperability and compliance are applied.

Conformance testing is carried out by an authorized person or organization.
When the testing is certified then the software products can be placed in market as a certified products.

Objective of Conformance Testing:

To check the requirements of the software system.
To check the completeness of software documentation.
To check the development and design according to specifications and standards.

......................................................................................................................................................................

-- Endurance testing
Endurance testing includes examining a system while it withstands a huge load for a long period and measuring the reaction parameters of the system under such conditions. Endurance testing includes the testing of the operating system and the computer hardware up to or above their maximum loads for a long period. 

Hence endurance testing can be defined as a software testing type where a system or software application is tested with a load extended over a long period to observe the behavior of the software under such conditions. 

It is performed at the last stage of the performance run cycle.
Endurance testing ensures that the application is capable of handling the extended load without any delay in response time. 
Endurance testing is a long process and sometimes it may last for up to a year.
In endurance testing, external loads like internet traffic and user actions are used.
Endurance testing is different from load testing as load testing ends in some hours. 

Advantages of Endurance Testing ::

1. It determines the amount of workload a system can handle.
2. It helps in the identification of performance problems that occur when the system is used for a long period.
3. It helps in identifying the amount of memory leakage.
4. If the testing is done effectively then there will be a reduction in maintenance costs.
5. It ensures client and customer satisfaction.
6. Identifying performance issues: Endurance testing can help identify performance issues that may not be immediately apparent during shorter testing periods, such as memory leaks, performance degradation, or other problems that may only occur after prolonged usage.
7. Improving performance: By identifying performance bottlenecks and capacity limits, endurance testing can help improve the overall performance of the system.
8. Real-world testing: Endurance testing simulates real-world usage patterns and loads, which can help ensure that the system can handle the expected usage in a production environment.
9. Finding hidden bugs: Endurance testing can help reveal bugs or issues that may not be immediately apparent, but that can cause problems when the system is used for an extended period.
10.Simulating long-term usage: Endurance testing allows testing teams to test the system for a prolonged period, this way it can help to identify bugs that may occur only after a certain time has passed.

Disadvantages of Endurance Testing ::

1. It takes more time to complete this testing technique.
2. Here, Manual Endurance Testing can not be performed.
3. Selection of the correct automation tool is important to test the system otherwise it leads to unexpected results.
4. We can not determine how much stress needs to be applied.
5. Over-stressing will result in performance problems, performance degradation, permanent loss of data, etc.
6. Time-consuming: Endurance testing can be time-consuming and may require significant resources, as the system must be tested for an extended period.
7. Costly: Endurance testing can be costly, as it may require specialized testing equipment or additional resources to simulate a heavy workload or a large number of users.
8. Complex: Endurance testing can be complex, as it may require specialized tools and scripts to automate the testing process.
9. Difficult to reproduce: If a problem is identified during endurance testing, it may be difficult to reproduce the issue to fix it.
10. Limited coverage: Endurance testing may not be able to cover all possible scenarios and usage patterns, leading to less complete testing results.

....................................................................................................................................................................

-- Load testing
Load testing determines the behavior of the application when multiple users use it at the same time. It is the response of the system measured under varying load conditions.

The load testing is carried out for normal and extreme load conditions. 
Load testing is a type of performance testing that simulates a real-world load on a system or application to see how it performs under stress.
The goal of load testing is to identify bottlenecks and determine the maximum number of users or transactions the system can handle.
It is an important aspect of software testing as it helps ensure that the system can handle the expected usage levels and identify any potential issues before the system is deployed to production.
During load testing, various scenarios are simulated to test the system’s behavior under different load conditions. 
This can include simulating a high number of concurrent users, simulating numerous requests, and simulating heavy network traffic.
The system’s performance is then measured and analyzed to identify any bottlenecks or issues that may occur.

Advantages of Load Testing ::

1. Identifying bottlenecks: Load testing helps identify bottlenecks in the system such as slow database queries, insufficient memory, or network congestion. This helps developers optimize the system and ensure that it can handle the expected number of users or transactions.
2. Improved scalability: By identifying the system’s maximum capacity, load testing helps ensure that the system can handle an increasing number of users or transactions over time. This is particularly important for web-based systems and applications that are expected to handle a high volume of traffic.
3. Improved reliability: Load testing helps identify any potential issues that may occur under heavy load conditions, such as increased error rates or slow response times. This helps ensure that the system is reliable and stable when it is deployed to production.
4. Reduced risk: By identifying potential issues before deployment, load testing helps reduce the risk of system failure or poor performance in production.
5. Cost-effective: Load testing is more cost-effective than fixing problems that occur in production. It is much cheaper to identify and fix issues during the testing phase than after deployment.
6. Improved user experience: By identifying and addressing bottlenecks, load testing helps ensure that users have a positive experience when using the system. This can help improve customer satisfaction and loyalty.

Disadvantages of Load Testing ::

1. Resource-intensive: Load testing can be resource-intensive, requiring significant hardware and software resources to simulate a large number of users or transactions. This can make load testing expensive and time-consuming.
2. Complexity: Load testing can be complex, requiring specialized knowledge and expertise to set up and execute effectively. This can make it difficult for teams with limited resources or experience to perform load testing.
3. Limited testing scope: Load testing is focused on the performance of the system under stress, and it may not be able to identify all types of issues or bugs. It’s important to combine load testing with other types of testing such as functional testing, regression testing, and acceptance testing.
4. Inaccurate results: If the load testing environment is not representative of the production environment or the load test scenarios do not accurately simulate real-world usage, the results of the test may not be accurate.
5. Difficulty in simulating real-world usage: It’s difficult to simulate real-world usage, and it’s hard to predict how users will interact with the system. This makes it difficult to know if the system will handle the expected load.
6. Complexity in analyzing the results: Load testing generates a large amount of data, and it can be difficult to analyze the results and determine the root cause of performance issues.

......................................................................................................................................................................

-- Performance testing
Performance testing is a type of software testing that focuses on evaluating the performance and scalability of a system or application.
Performance testing aims to identify bottlenecks, measure system performance under various loads and conditions, and ensure that the system can handle the expected number of users or transactions.

TYPES :

LOAD
STRESS
SPIKE
SOAK
ENDURANCE
VOLUME
SCALIBILITY

Advantages of Performance Testing ::

1. Identifying bottlenecks : Performance testing helps identify bottlenecks in the system such as slow database queries, insufficient memory, or network congestion. This helps developers optimize the system and ensure that it can handle the expected number of users or transactions.
2. Improved scalability: By identifying the system’s maximum capacity, performance testing helps ensure that the system can handle an increasing number of users or transactions over time. This is particularly important for web-based systems and applications that are expected to handle a high volume of traffic.
3. Improved reliability: Performance testing helps identify any potential issues that may occur under heavy load conditions, such as increased error rates or slow response times. This helps ensure that the system is reliable and stable when it is deployed to production.
4. Reduced risk: By identifying potential issues before deployment, performance testing helps reduce the risk of system failure or poor performance in production.
5. Cost-effective: Performance testing is more cost-effective than fixing problems that occur in production. It is much cheaper to identify and fix issues during the testing phase than after deployment.
6. Improved user experience : By identifying and addressing bottlenecks, performance testing helps ensure that users have a positive experience when using the system. This can help improve customer satisfaction and loyalty.
7. Better Preparation: Performance testing can also help organizations prepare for unexpected traffic patterns or changes in usage that might occur in the future.
8. Compliance : Performance testing can help organizations meet regulatory and industry standards.
9. Better understanding of the system: Performance testing provides a better understanding of how the system behaves under different conditions, which can help in identifying potential issue areas and improving the overall design of the system.
10. Performance testing ensures the speed, load capability, accuracy, and other performances of the system.
11. It identifies, monitors, and resolves the issues if anything occurs.
12. It ensures the great optimization of the software and also allows many users to use it at the same time.
13. It ensures the client as well as the end-customer’s satisfaction. Performance testing has several advantages that make it an important aspect of software testing:

Disadvantages of Performance Testing ::

1. Resource-intensive: Performance testing can be resource-intensive, requiring significant hardware and software resources to simulate many users or transactions. This can make performance testing expensive and time-consuming.
2. Complexity: Performance testing can be complex, requiring specialized knowledge and expertise to set up and execute effectively. This can make it difficult for teams with limited resources or experience to perform performance testing.
3. Limited testing scope: Performance testing is focused on the performance of the system under stress, and it may not be able to identify all types of issues or bugs. It’s important to combine performance testing with other types of testing such as functional testing, regression testing, and acceptance testing.
4. Inaccurate results: If the performance testing environment is not representative of the production environment or the performance test scenarios do not accurately simulate real-world usage, the results of the test may not be accurate.
5. Difficulty in simulating real-world usage: It’s difficult to simulate real-world usage, and it’s hard to predict how users will interact with the system. This makes it difficult to know if the system will handle the expected load.
6. Complexity in analyzing the results: Performance testing generates a large amount of data, and it can be difficult to analyze the results and determine the root cause of performance issues.
7. Sometimes, users may find performance issues in the real-time environment.
8. Team members who are writing test scripts or test cases in the automation tool should have a high level of knowledge.
9. Team members should have high proficiency in debugging the test cases or test scripts.
10. Low performances in the real environment may lead to the loss of a large number of users.

.....................................................................................................................................................................

-- RECOVERY TESTING
Recovery Testing is a type of software testing that checks how well an application can recover from crashes, failures, or other unexpected issues.
It involves intentionally causing problems in the software to see if it can quickly and effectively return to normal operation. 
This helps ensure the software is reliable and can handle unexpected situations without losing data or functionality.

A system or software should be recovery tested for failures like:

Power supply failure
The external server is unreachable
Wireless network signal loss
Physical conditions
The external device not responding
The external device is not responding as expected, etc.

Advantages of Recovery Testing ::

1. Improves the quality of the system by eliminating the potential flaws in the system so that the system works as expected.
2. Recovery testing is also referred to as Disaster Recovery Testing. A lot of companies have disaster recovery centers to make sure that if any of the systems is damaged or fails due to some reason, then there is back up to recover from the failure.
3. Risk elimination is possible as the potential flaws are detected and removed from the system.
4. Improved performance as faults are removed, and the system becomes more reliable and performs better in case a failure occurs.
5. Ensures Reliability: Confirms that the software can recover from crashes or failures, making it more reliable for users.
6. Identifies Weaknesses: Helps uncover potential weaknesses or vulnerabilities in the system that could lead to failures.
7. Enhances User Experience: Ensures a smooth user experience by minimizing downtime and data loss during unexpected events.
8. Improves System Stability: Contributes to overall system stability by ensuring it can handle and recover from disruptions.
9. Supports Business Continuity: Aids in maintaining business operations by ensuring critical systems can quickly resume functioning after a failure.
10. Validates Backup and Recovery Procedures: Tests the effectiveness of backup systems and recovery procedures, ensuring they work as intended.
11. Reduces Costs: By identifying and addressing recovery issues early, it can reduce the costs associated with system downtimes and data losses.
12. Boosts Confidence: Provides stakeholders with confidence in the system’s ability to handle unforeseen problems.

Disadvantages of Recovery Testing ::

1. Recovery testing is a time-consuming process as it involves multiple steps and preparations before and during the process.
2. The recovery personnel must be trained as the process of recovery testing takes place under his supervision. So, the tester needs to be trained to ensure that recovery testing is performed in the proper way. For performing recovery testing, he should have enough data and back up files to perform recovery testing.
3. The potential flaws or issues are unpredictable in a few cases. It is difficult to point out the exact reason for the same, however, since the quality of the software must be maintained, so random test cases are created and executed to ensure such potential flaws are removed.
4. Time-Consuming: Simulating failures and ensuring proper recovery can be a lengthy process, especially for complex systems.
5. Resource-Intensive: Requires significant computational and human resources to create and manage various failure scenarios.
6. Complexity: Developing effective recovery test cases can be complicated, as it involves understanding potential failure points and designing appropriate recovery strategies.
7. Costly: Due to the need for specialized tools and resources, recovery testing can be expensive to implement and maintain. Why do we do recovery testing?
8. Risk of Data Loss: If not properly managed, testing failures could result in actual data loss or corruption, affecting the integrity of the system.
9. False Sense of Security: If not comprehensive, recovery testing might miss certain failure scenarios, leading to a false sense of confidence in the software’s robustness.
10. Environment Dependency: The testing environment might not accurately replicate real-world conditions, leading to potential discrepancies in recovery performance.

.....................................................................................................................................................................

-- Security testing
Security Testing is a type of Software Testing that uncovers vulnerabilities in the system and determines that the data and resources of the system are protected from possible intruders.
It ensures that the software system and application are free from any threats or risks that can cause a loss.
Security testing of any system is focused on finding all possible loopholes and weaknesses of the system that might result in the loss of information or repute of the organization.

Major Focus Areas in Security Testing ::

Network Security
System Software Security
Client-side Application Security
Server-side Application Security
Authentication and Authorization: Testing the system’s ability to properly authenticate and authorize users and devices. This includes testing the strength and effectiveness of passwords, usernames, and other forms of authentication, as well as testing the system’s access controls and permission mechanisms.
Network and Infrastructure Security: Testing the security of the system’s network and infrastructure, including firewalls, routers, and other network devices. This includes testing the system’s ability to defend against common network attacks such as denial of service (DoS) and man-in-the-middle (MitM) attacks.
Database Security: Testing the security of the system’s databases, including testing for SQL injection, cross-site scripting, and other types of attacks.
Application Security: Testing the security of the system’s applications, including testing for cross-site scripting, injection attacks, and other types of vulnerabilities.
Data Security: Testing the security of the system’s data, including testing for data encryption, data integrity, and data leakage.
Compliance: Testing the system’s compliance with relevant security standards and regulations, such as HIPAA, PCI DSS, and SOC2.
Cloud Security: Testing the security of cloud

Advantages of Security Testing ::

1. Identifying vulnerabilities: Security testing helps identify vulnerabilities in the system that could be exploited by attackers, such as weak passwords, unpatched software, and misconfigured systems.
2. Improving system security: Security testing helps improve the overall security of the system by identifying and fixing vulnerabilities and potential threats.
3. Ensuring compliance: Security testing helps ensure that the system meets relevant security standards and regulations, such as HIPAA, PCI DSS, and SOC2.
4. Reducing risk: By identifying and fixing vulnerabilities and potential threats before the system is deployed to production, security testing helps reduce the risk of a security incident occurring in a production environment.
5. Improving incident response: Security testing helps organizations understand the potential risks and vulnerabilities that they face, enabling them to prepare for and respond to potential security incidents.

Disadvantages of Security Testing
1. Resource-intensive: Security testing can be resource-intensive, requiring significant hardware and software resources to simulate different types of attacks.
2. Complexity: Security testing can be complex, requiring specialized knowledge and expertise to set up and execute effectively.
3. Limited testing scope: Security testing may not be able to identify all types of vulnerabilities and threats.
4. False positives and negatives: Security testing may produce false positives or false negatives, which can lead to confusion and wasted effort.
5. Time-consuming: Security testing can be time-consuming, especially if the system is large and complex.
6. Difficulty in simulating real-world attacks: It’s difficult to simulate real-world attacks, and it’s hard to predict how attackers will interact with the system.

....................................................................................................................................................................

-- Scalability testing
Scalability Testing is a type of non-functional testing in which the performance of a software application, system, network or process is tested in terms of its capability to scale up or scale down the number of user request load or other such performance attributes. 
It can be carried out at a hardware, software or database level.
Scalability Testing is defined as the ability of a network, system, application, product or a process to perform the function correctly when changes are made in the size or volume of the system to meet a growing need. 
It ensures that a software product can manage the scheduled increase in user traffic, data volume, transaction counts frequency and many other things. 
It tests the system, processes or database’s ability to meet a growing need. 

Scalability Testing is to measure at what point the software product or the system stops scaling and identify the reason behind it. 
The parameters used for this testing differs from one application to another. 
For example, scalability testing of a web page depends on the number of users, CPU usage, network usage while scalability testing of a web server depends on the number of requests processed.

Advantages of Scalability Testing ::

1. It provides more accessibility to the product.
2. It detects issues with web page loading and other performance issues.
3. It finds and fixes the issues earlier in the product which saves a lot of time.
4. It ensures the end user experience under the specific load. It provides customer satisfaction.
5. It helps in effective tool utilization tracking.

Disadvantages of Scalability Testing ::

1. Sometimes, it fails to find the functional errors or issues in the product.
2. Some automation tools used for Scalability testing is costlier which ultimately increases the budget of the product.
3. Team members involve in this testing technique should have high level of testing skills.
4. The time spent on testing some parts of product may consume more time than expected time.
5. Unexpected results may also be raised after launching the product in the customer environment.

..........................................................................................................................................................................

-- Stress testing
Stress testing is defined as types of software testing that verifies the stability and reliability of the system.
This test particularly determines the system’s robustness and error handling under the burden of some load conditions.
It tests beyond the normal operating point and analyses how the system works under extreme conditions.
Stress testing is performed to ensure that the system does not crash under crunch situations.
Stress testing is also known as Endurance Testing or Torture Testing .

The process includes assessing the system’s response to heavy loads, identifying weaknesses, and ensuring it remains stable under stress.

Advantages of Stress Testing ::

1. Determines the behavior of the system: Stress testing determines the behavior of the system after failure and ensures that the system recovers quickly.
2. Ensure failure does not cause security issues: Stress testing ensures that system failure doesn’t cause security issues.
3. Makes system function in every situation: Stress testing makes the system work in normal as well as abnormal conditions in an appropriate way.
4. Improving Decision Making: Decision-making processes can benefit from the insightful information that stress testing offers.
5. Increasing Stakeholder confidence: Providing clear information about the outcomes of stress tests helps boost stakeholder confidence. Organizations that show a proactive approach to risk management are valued by investors, customers, and other stakeholders, since it cultivates credibility and confidence.

Disadvantages of Stress Testing ::

1. Manual stress testing is complicated: The manual process of stress testing takes a longer time to complete and it is a complicated process.
2. Good scripting knowledge required: Good scripting knowledge for implementing the script test cases for the particular tool is required.
3. Need for external resources: There is a need for external resources to implement stress testing. It leads to an extra amount of resources and time.
4. Constantly licensed tool: In the case of a licensed stress testing tool, it charges more than the average amount of cost.
5. Additional tool required in case of open-source stress testing tool: In the case of some open-source tools, there is a need for a load testing tool additionally for setting up the stress testing environment.
6. Improper test script implementation results in wastage: If proper stress scripts or test cases are not implemented then there will be a chance of failure of some resources and wastage of time.

.......................................................................................................................................................................

-- Usability test
Usability Testing in software testing is a type of testing, that is done from an end user’s perspective to determine if the system is easily usable.
Usability testing is generally the practice of testing how easy a design is to use on a group of representative users.
Several tests are performed on a product before deploying it. You need to collect qualitative and quantitative data and satisfy customers’ needs with the product. 
A proper final report is made mentioning the changes required in the product (software).

Usability testing involves evaluating the functionality of a website, app, or digital product by observing real users as they navigate through it. 
Typically conducted by researchers, either in-person or remotely, the aim is to identify any areas of confusion or difficulty users encounter while completing tasks.

The ultimate goal of usability testing is to uncover pain points in the user experience, revealing opportunities for improvement.
By assessing how efficiently users achieve their goals within the product, usability testing helps in enhancing its overall functionality and user satisfaction.

Advantages of Usability Testing ::

Usability testing is preferred to evaluate a product or service by testing it with the proper users.
In Usability testing, the development and design teams will use to identify issues before coding and the result will be earlier issues will be solved.
During a Usability test, you can,

1. User-Centric Design: By involving actual users in the testing process, you ensure that your product or website is designed with their needs and preferences in mind.
2. Identifying User Pain Points: Usability testing helps uncover areas where users struggle or encounter difficulties while interacting with your product. This insight allows you to address these pain points and improve the overall user experience.
3. Optimizing User Interface: Through usability testing, you can evaluate the effectiveness of your user interface (UI) design, including layout, navigation, and interactive elements. This enables you to refine and optimize the UI for better usability.
4. Enhancing User Satisfaction: By addressing usability issues and making improvements based on user feedback, you can enhance user satisfaction and loyalty, leading to increased engagement and retention.
5. Reducing Development Costs: Identifying usability issues early in the development process helps prevent costly redesigns and rework later on. This ultimately saves time and resources during product development.

Disadvantages of Usability Testing ::

The biggest cons of usability testing are the cost and time.
The more usability testing is performed, the more cost and time is being used. 

1. Bias and Subjectivity: Testers’ biases, preferences, and interpretations can influence the results of usability testing. Additionally, participants may alter their behavior when they know they are being observed, leading to results that do not accurately reflect real-world usage.
2. Influence of Testing Environment: Usability testing often takes place in controlled environments, such as labs or testing facilities, which may not accurately replicate the conditions in which the product will be used. This can impact the validity of the test results.
3. Difficulty in Capturing Emotions and Context: Usability testing may struggle to capture users’ emotions, motivations, and the context in which they are using the product. This qualitative aspect of user experience can be challenging to measure objectively.
4. Limited Scope of Testing: Usability testing typically focuses on specific tasks or scenarios, which may not fully capture the overall user experience or uncover all potential usability issues.
5. Difficulty in Identifying Solutions: While usability testing can identify usability problems, it may not always provide clear solutions or recommendations for improvement. Additional analysis and interpretation may be required to address identified issues effectively.

......................................................................................................................................................................

-- Volume testing
Volume Testing is a type of software testing which is carried out to test a software application with a certain amount of data. The amount used in volume testing could be a database size or it could also be the size of an interface file that is the subject of volume testing. 

While testing the application with a specific database size, database is extended to that size and after that the performance of the application is tested.
When an application needs interaction with an interface file this could be either reading or writing the file or same from the file.
A sample file of the size required is created and then functionality of the application is tested with that file in order to test the performance. 

Advantages of Volume Testing ::

1. Volume testing is helpful in saving maintenance cost that will be spent on application maintenance.
2. Volume testing is also helpful in a rapid start for scalability plans.
3. Volume testing also helps in early identification of bottlenecks.
4. Volume testing ensures that the system is capable of real world usage.

Disadvantages of Volume Testing ::

1. More number of skilled resources are needed to carry out this testing.
2. It is sometimes difficult to prepare test cases with respect to the number of volume of data to be tested.
3. It is a time consuming technique since it requires lot of time to decide the number of volume of data and test scenarios.
4. It is a bit costly as compared to another testing technique.
5. It is not possible to have the exact break down of memory used in the real world application.

.....................................................................................................................................................................

-- Failover testing
Failover testing is a method used to check if a system can smoothly allocate additional resources and back up all its data and processes when something goes wrong, such as a system failure.
It tests whether the system can handle serious failures and uses backup servers when needed. 
Importantly, this type of testing focuses on how the system handles failure, rather than the physical components like the server hardware.

Benefits of Failover Testing ::

1. Determines Vulnerabilities and Weaknesses: Failover testing helps in locating holes and vulnerabilities in the system by simulating different failure scenarios. Organizations can address any problems before they have an impact on production settings by taking a proactive approach.
2. Verifies Redundancy Procedures: Redundancy mechanisms are frequently incorporated into systems to improve reliability. In order to make sure that these systems such as redundant servers, databases, or network paths, work flawlessly in the event of a breakdown, failover testing verifies their efficacy.
3. Improving the User Experience: Consumers anticipate consistent and dependable service availability. By reducing interruptions and ensuring service availability even in the face of unanticipated circumstances, failover testing contributes to the provision of a positive user experience.
4. Encourages Compliance: Failover testing supports organizations in demonstrating compliance with these rules by ensuring that systems can recover within prescribed times.
5. Encourages Continuous Improvement: Organizations that regularly test their systems can learn from each test cycle, fix problems found and upgrade their failover procedures to meet changing business needs and technological advancements.

.....................................................................................................................................................................

-- 

